{
    "name": "Rectangle Area II",
    "id": "880",
    "frontend_id": "850",
    "template_code_snippet": "class Solution:\n    def rectangleArea(self, rectangles: List[List[int]]) -> int:\n        ",
    "template_code_definition": "class Solution:\n    def rectangleArea(self, rectangles: List[List[int]]) -> int:\n        ",
    "problem_statement": "You are given a 2D array of axis-aligned rectangles. Each rectangle[i] = [xi1, yi1, xi2, yi2] denotes the i^th rectangle where (xi1, yi1) are the coordinates of the bottom-left corner, and (xi2, yi2) are the coordinates of the top-right corner.\nCalculate the total area covered by all rectangles in the plane. Any area covered by two or more rectangles should only be counted once.\nReturn the total area. Since the answer may be too large, return it modulo 10^9 + 7.\n \nExample 1:\n\n\nInput: rectangles = [[0,0,2,2],[1,0,2,3],[1,0,3,1]]\nOutput: 6\nExplanation: A total area of 6 is covered by all three rectangles, as illustrated in the picture.\nFrom (1,1) to (2,2), the green and red rectangles overlap.\nFrom (1,0) to (2,3), all three rectangles overlap.\n\nExample 2:\n\nInput: rectangles = [[0,0,1000000000,1000000000]]\nOutput: 49\nExplanation: The answer is 10^18 modulo (10^9 + 7), which is 49.\n\n \nConstraints:\n\n1 <= rectangles.length <= 200\nrectanges[i].length == 4\n0 <= xi1, yi1, xi2, yi2 <= 10^9\nxi1 <= xi2\nyi1 <= yi2\nAll rectangles have non zero area.\n\n",
    "difficulty": "Hard",
    "premium": false,
    "sample_test_case": "[[0,0,2,2],[1,0,2,3],[1,0,3,1]]"
}