class Solution:
    from itertools import permutations
    from typing import List
    
    def permute(self, n: int, k: int) -> List[int]:
        
    
        def is_alternating(perm):
            for i in range(len(perm) - 1):
                if perm[i] % 2 == 0 and perm[i + 1] % 2 == 0 or (perm[i] % 2 == 1 and perm[i + 1] % 2 == 1):
                    return False
            return True
        numbers = list(range(1, n + 1))
        alternating_perms = []
        for perm in permutations(numbers):
            if is_alternating(perm):
                alternating_perms.append(perm)
                if len(alternating_perms) == k:
                    return list(perm)
        return []