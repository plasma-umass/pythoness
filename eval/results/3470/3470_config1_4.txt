class Solution:
    
    def permute(self, n: int, k: int) -> List[int]:
        
        import itertools
        from collections import deque
        from typing import List
    
        def is_alternating(perm):
            return all((perm[i] % 2 != perm[i + 1] % 2 for i in range(len(perm) - 1)))
        numbers = list(range(1, n + 1))
        alternating_perms = deque()
        for perm in itertools.permutations(numbers):
            if is_alternating(perm):
                alternating_perms.append(list(perm))
                if len(alternating_perms) == k:
                    return alternating_perms[-1]
        return []