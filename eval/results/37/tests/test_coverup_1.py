# file: src/oracle37.py:4-33
# asked: {"lines": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33], "branches": [[8, 9], [8, 11], [12, 0], [12, 13], [13, 14], [13, 18], [18, 12], [18, 19], [26, 27], [26, 33], [27, 26], [27, 28], [28, 29], [28, 31]]}
# gained: {"lines": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33], "branches": [[8, 9], [8, 11], [12, 0], [12, 13], [13, 14], [13, 18], [18, 12], [18, 19], [26, 27], [26, 33], [27, 26], [27, 28], [28, 29], [28, 31]]}

import pytest
from typing import List
from src.oracle37 import Solution

@pytest.fixture
def sudoku_board():
    return [
        ["5", "3", ".", ".", "7", ".", ".", ".", "."],
        ["6", ".", ".", "1", "9", "5", ".", ".", "."],
        [".", "9", "8", ".", ".", ".", ".", "6", "."],
        ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
        ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
        ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
        [".", "6", ".", ".", ".", ".", "2", "8", "."],
        [".", ".", ".", "4", "1", "9", ".", ".", "5"],
        [".", ".", ".", ".", "8", ".", ".", "7", "9"]
    ]

def test_solve_sudoku(sudoku_board):
    solution = Solution()
    solution.solveSudoku(sudoku_board)
    
    # Verify the board is solved correctly
    expected_solution = [
        ["5", "3", "4", "6", "7", "8", "9", "1", "2"],
        ["6", "7", "2", "1", "9", "5", "3", "4", "8"],
        ["1", "9", "8", "3", "4", "2", "5", "6", "7"],
        ["8", "5", "9", "7", "6", "1", "4", "2", "3"],
        ["4", "2", "6", "8", "5", "3", "7", "9", "1"],
        ["7", "1", "3", "9", "2", "4", "8", "5", "6"],
        ["9", "6", "1", "5", "3", "7", "2", "8", "4"],
        ["2", "8", "7", "4", "1", "9", "6", "3", "5"],
        ["3", "4", "5", "2", "8", "6", "1", "7", "9"]
    ]
    
    assert sudoku_board == expected_solution
