{
    "name": "Permutation Sequence",
    "id": "60",
    "frontend_id": "60",
    "template_code_snippet": "class Solution:\n    def getPermutation(self, n: int, k: int) -> str:\n        ",
    "template_code_definition": "class Solution:\n    def getPermutation(self, n: int, k: int) -> str:\n        ",
    "problem_statement": "The set [1, 2, 3, ...,\u00a0n] contains a total of n! unique permutations.\nBy listing and labeling all of the permutations in order, we get the following sequence for n = 3:\n\n\"123\"\n\"132\"\n\"213\"\n\"231\"\n\"312\"\n\"321\"\n\nGiven n and k, return the k^th permutation sequence.\n\u00a0\nExample 1:\nInput: n = 3, k = 3\nOutput: \"213\"\nExample 2:\nInput: n = 4, k = 9\nOutput: \"2314\"\nExample 3:\nInput: n = 3, k = 1\nOutput: \"123\"\n\n\u00a0\nConstraints:\n\n1 <= n <= 9\n1 <= k <= n!\n\n",
    "difficulty": "Hard",
    "premium": false,
    "enable_run_code": true,
    "enable_test_mode": false,
    "judge_type": "large",
    "judger_available": true,
    "sample_test_case": "3\n3"
}