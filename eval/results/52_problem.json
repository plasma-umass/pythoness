{
    "name": "N-Queens II",
    "id": "52",
    "frontend_id": "52",
    "template_code_snippet": "class Solution:\n    def totalNQueens(self, n: int) -> int:\n        ",
    "template_code_definition": "class Solution:\n    def totalNQueens(self, n: int) -> int:\n        ",
    "problem_statement": "The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\nGiven an integer n, return the number of distinct solutions to the\u00a0n-queens puzzle.\n\u00a0\nExample 1:\n\n\nInput: n = 4\nOutput: 2\nExplanation: There are two distinct solutions to the 4-queens puzzle as shown.\n\nExample 2:\n\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 9\n\n",
    "difficulty": "Hard",
    "premium": false,
    "enable_run_code": true,
    "enable_test_mode": false,
    "judge_type": "large",
    "judger_available": true,
    "sample_test_case": "4"
}