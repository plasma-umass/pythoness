class Solution:
    from typing import List
    
    def findSubstring(self, s: str, words: List[str]) -> List[int]:
        
        if not s or not words or (not words[0]):
            return []
        word_length = len(words[0])
        total_words = len(words)
        total_length = word_length * total_words
        word_count = {}
        for word in words:
            word_count[word] = word_count.get(word, 0) + 1
        result = []
        for i in range(word_length):
            left = i
            current_count = {}
            count = 0
            for j in range(i, len(s) - word_length + 1, word_length):
                sub = s[j:j + word_length]
                if sub in word_count:
                    current_count[sub] = current_count.get(sub, 0) + 1
                    count += 1
                    while current_count[sub] > word_count[sub]:
                        leftmost_word = s[left:left + word_length]
                        current_count[leftmost_word] -= 1
                        left += word_length
                        count -= 1
                    if count == total_words:
                        result.append(left)
                else:
                    current_count.clear()
                    count = 0
                    left = j + word_length
        return result